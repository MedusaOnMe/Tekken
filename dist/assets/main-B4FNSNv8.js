(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=e(s);fetch(s.href,a)}})();let f=class{constructor(){this.context=null,this.sounds={},this.musicVolume=.5,this.sfxVolume=.7,this.initialized=!1,this.currentMusic=null,this.soundDefinitions={punch_light:{frequency:200,duration:100,type:"sawtooth"},punch_heavy:{frequency:150,duration:150,type:"square"},kick_light:{frequency:300,duration:120,type:"triangle"},kick_heavy:{frequency:250,duration:180,type:"square"},block:{frequency:100,duration:200,type:"sine"},hit:{frequency:400,duration:80,type:"sawtooth"},special_trump:{frequency:180,duration:300,type:"square"},special_elon:{frequency:600,duration:250,type:"sawtooth"},ultimate_trump:{frequency:100,duration:500,type:"square"},ultimate_elon:{frequency:800,duration:400,type:"triangle"},menu_select:{frequency:440,duration:50,type:"sine"},menu_hover:{frequency:350,duration:30,type:"sine"},round_start:{frequency:523,duration:500,type:"sine"},round_end:{frequency:261,duration:700,type:"sine"},victory:{frequency:659,duration:1e3,type:"sine"},defeat:{frequency:196,duration:1e3,type:"square"}}}init(){try{return this.context=new(window.AudioContext||window.webkitAudioContext),this.initialized=!0,this.createSounds(),!0}catch(t){return console.warn("Web Audio API not supported:",t),this.initialized=!1,!1}}createSounds(){for(let t in this.soundDefinitions)this.sounds[t]=this.soundDefinitions[t]}playSound(t,e=1){if(!this.initialized||!this.sounds[t])return;const i=this.sounds[t],s=this.context.createOscillator(),a=this.context.createGain();s.type=i.type,s.frequency.setValueAtTime(i.frequency,this.context.currentTime),a.gain.setValueAtTime(this.sfxVolume*e,this.context.currentTime),a.gain.exponentialRampToValueAtTime(.01,this.context.currentTime+i.duration/1e3),s.connect(a),a.connect(this.context.destination),s.start(this.context.currentTime),s.stop(this.context.currentTime+i.duration/1e3),(t.includes("special")||t.includes("ultimate"))&&this.addEcho(a,i.duration/1e3)}addEcho(t,e){const i=this.context.createDelay(),s=this.context.createGain(),a=this.context.createBiquadFilter();i.delayTime.value=.2,s.gain.value=.5,a.frequency.value=2e3,t.connect(i),i.connect(a),a.connect(s),s.connect(i),s.connect(this.context.destination)}playBackgroundMusic(){if(!this.initialized)return;const t=[{freq:130.81,duration:500},{freq:146.83,duration:500},{freq:164.81,duration:500},{freq:174.61,duration:500},{freq:196,duration:500},{freq:174.61,duration:500},{freq:164.81,duration:500},{freq:146.83,duration:500}];let e=this.context.currentTime;const i=()=>{t.forEach((s,a)=>{const n=this.context.createOscillator(),o=this.context.createGain();n.type="sine",n.frequency.setValueAtTime(s.freq,e),o.gain.setValueAtTime(0,e),o.gain.linearRampToValueAtTime(this.musicVolume*.3,e+.05),o.gain.exponentialRampToValueAtTime(.01,e+s.duration/1e3),n.connect(o),o.connect(this.context.destination),n.start(e),n.stop(e+s.duration/1e3),e+=s.duration/1e3})};i(),this.currentMusic=setInterval(()=>{e=this.context.currentTime,i()},4e3)}stopBackgroundMusic(){this.currentMusic&&(clearInterval(this.currentMusic),this.currentMusic=null)}playComboSound(t){if(!this.initialized)return;const e=440,i=1+t*.1,s=this.context.createOscillator(),a=this.context.createGain();s.type="sine",s.frequency.setValueAtTime(e*i,this.context.currentTime),s.frequency.exponentialRampToValueAtTime(e*i*2,this.context.currentTime+.1),a.gain.setValueAtTime(this.sfxVolume,this.context.currentTime),a.gain.exponentialRampToValueAtTime(.01,this.context.currentTime+.2),s.connect(a),a.connect(this.context.destination),s.start(this.context.currentTime),s.stop(this.context.currentTime+.2)}playHitSound(t){if(!this.initialized)return;const e=this.context.createOscillator(),i=this.context.createGain(),s=this.context.createBiquadFilter();e.type="sawtooth",e.frequency.setValueAtTime(100+t*10,this.context.currentTime),s.type="lowpass",s.frequency.setValueAtTime(1e3,this.context.currentTime),s.Q.setValueAtTime(10,this.context.currentTime),i.gain.setValueAtTime(this.sfxVolume*.8,this.context.currentTime),i.gain.exponentialRampToValueAtTime(.01,this.context.currentTime+.1),e.connect(s),s.connect(i),i.connect(this.context.destination),e.start(this.context.currentTime),e.stop(this.context.currentTime+.1);const a=this.createNoise(.05),n=this.context.createGain();n.gain.setValueAtTime(this.sfxVolume*.3,this.context.currentTime),n.gain.exponentialRampToValueAtTime(.01,this.context.currentTime+.05),a.connect(n),n.connect(this.context.destination)}createNoise(t){const e=this.context.sampleRate*t,i=this.context.createBuffer(1,e,this.context.sampleRate),s=i.getChannelData(0);for(let n=0;n<e;n++)s[n]=Math.random()*2-1;const a=this.context.createBufferSource();return a.buffer=i,a.start(this.context.currentTime),a}playVoiceLine(t,e){}setMusicVolume(t){this.musicVolume=Math.max(0,Math.min(1,t))}setSFXVolume(t){this.sfxVolume=Math.max(0,Math.min(1,t))}resume(){this.context&&this.context.state==="suspended"&&this.context.resume()}};window.AudioSystem=f;const g={trump:{name:"Donald Trump",health:200,maxHealth:200,specialEnergy:0,maxSpecialEnergy:100,speed:3,jumpPower:15,weight:1.2,width:200,height:300,color:"#ff6b6b",imageSrc:"trump.png",moves:{punch:{damage:8,range:120,cooldown:300,knockback:5,specialGain:5,animation:"punch",sound:"punch_heavy"},kick:{damage:10,range:140,cooldown:400,knockback:8,specialGain:7,animation:"kick",sound:"kick_heavy"},special:{name:"Executive Order",damage:15,range:180,cooldown:1e3,knockback:12,specialCost:30,animation:"special",sound:"special_trump",effect:"executive_order"},ultimate:{name:"Big League Slam",damage:35,range:200,cooldown:3e3,knockback:20,specialCost:80,animation:"ultimate",sound:"ultimate_trump",effect:"big_league_slam"},block:{damageReduction:.8,specialGain:2,animation:"block"}},combos:{"punch,punch,kick":{name:"Twitter Storm",damage:25,specialGain:15,effect:"twitter_storm"},"kick,punch,special":{name:"Wall Combo",damage:30,specialGain:20,effect:"wall_combo"}},voiceLines:{intro:["You're fired!","Let's make this fight great again!","Nobody fights better than me!"],win:["I won bigly!","That was tremendous!","Another victory for Trump!"],lose:["This is fake news!","The fight was rigged!","I demand a rematch!"],taunt:["Sad!","Wrong!","You're a loser!"],hurt:["Ow!","Not fair!","Stop it!"],special:["Executive order!","You're fired!","Big league move!"],ultimate:["This is huge!","Nobody beats Trump!","Make fighting great again!"]}},elon:{name:"Elon Musk",health:200,maxHealth:200,specialEnergy:0,maxSpecialEnergy:100,speed:5,jumpPower:18,weight:.9,width:180,height:300,color:"#667eea",imageSrc:"elon.png",moves:{punch:{damage:6,range:110,cooldown:200,knockback:4,specialGain:6,animation:"punch",sound:"punch_light"},kick:{damage:8,range:130,cooldown:300,knockback:6,specialGain:8,animation:"kick",sound:"kick_light"},special:{name:"Rocket Punch",damage:12,range:250,cooldown:800,knockback:10,specialCost:25,animation:"special",sound:"special_elon",effect:"rocket_punch",projectile:!0},ultimate:{name:"Mars Strike",damage:30,range:300,cooldown:3e3,knockback:25,specialCost:80,animation:"ultimate",sound:"ultimate_elon",effect:"mars_strike"},block:{damageReduction:.7,specialGain:3,animation:"block"}},combos:{"punch,punch,punch,kick":{name:"Tesla Coil",damage:20,specialGain:18,effect:"tesla_coil"},"kick,kick,special":{name:"Hyperloop Dash",damage:28,specialGain:25,effect:"hyperloop_dash"}},abilities:{doubleJump:!0,dashSpeed:8},voiceLines:{intro:["Let's go to Mars!","Innovation time!","Physics don't lie!"],win:["Mission accomplished!","That's how we do it at SpaceX!","Another successful launch!"],lose:["Need to iterate...","Back to the drawing board!","Failure is an option here"],taunt:["How's that for innovation?","You need an upgrade!","Outdated tech!"],hurt:["Systems damaged!","Hull breach!","Malfunction!"],special:["Rocket punch!","Full thrust!","Engaging boosters!"],ultimate:["To Mars and beyond!","Maximum acceleration!","Orbital strike incoming!"]}}};let y=class{constructor(t,e,i,s=!0){const a=g[t];Object.assign(this,JSON.parse(JSON.stringify(a))),this.type=t,this.x=e,this.y=i,this.isPlayer=s,this.velocityX=0,this.velocityY=0,this.isGrounded=!1,this.isBlocking=!1,this.isCrouching=!1,this.facingRight=!0,this.isAttacking=!1,this.isDamaged=!1,this.isInvulnerable=!1,this.currentAnimation="idle",this.animationFrame=0,this.animationTimer=0,this.damageTimer=0,this.invulnerableTimer=0,this.lastAttack=null,this.cooldowns={},this.comboBuffer=[],this.comboTimer=0,this.currentCombo=0,this.maxCombo=0,this.doubleJumpUsed=!1,this.dashCooldown=0,this.isVictorious=!1,this.isDefeated=!1,this.victoryAnimationTimer=0,this.defeatAnimationTimer=0,this.ai=null,this.projectiles=[],this.image=null,this.imageLoaded=!1,this.loadImage()}loadImage(){this.sprites={idle:{file:`${this.type}_idle.png`},walk:{file:`${this.type}_walk.png`},jump:{file:`${this.type}_idle.png`},punch:{file:`${this.type}_punch.png`},kick:{file:`${this.type}_kick.png`},block:{file:`${this.type}_block.png`},hurt:{file:`${this.type}_hurt.png`},special:{file:`${this.type}_punch.png`},ultimate:{file:`${this.type}_kick.png`},win:{file:`${this.type}_idle.png`},defeat:{file:`${this.type}_hurt.png`}},this.spriteImages={},this.loadedSprites=0,this.totalSprites=6,[`${this.type}_idle.png`,`${this.type}_walk.png`,`${this.type}_punch.png`,`${this.type}_kick.png`,`${this.type}_block.png`,`${this.type}_hurt.png`].forEach(e=>{this.spriteImages[e]=new Image,this.spriteImages[e].onload=()=>{this.loadedSprites++,console.log(`Loaded ${e} for ${this.type} (${this.loadedSprites}/${this.totalSprites})`),this.loadedSprites>=this.totalSprites&&(this.imageLoaded=!0,console.log(`✅ All sprites loaded for ${this.type}`))},this.spriteImages[e].onerror=()=>{console.warn(`❌ Failed to load sprite: ${e} for ${this.type}`),this.loadedSprites++,this.loadedSprites>=this.totalSprites&&(this.imageLoaded=!0,console.log(`⚠️ Sprite loading completed for ${this.type} (with errors)`))},this.spriteImages[e].src=`sprites/${this.type}/${e}`,console.log(`Loading: sprites/${this.type}/${e}`)})}update(t,e,i){if(this.isVictorious){this.victoryAnimationTimer+=t,this.victoryAnimationTimer%1e3<500&&(this.y-=Math.sin(this.victoryAnimationTimer*.01)*2);return}if(this.isDefeated){this.defeatAnimationTimer+=t,this.defeatAnimationTimer<2e3&&(this.velocityY+=.5,this.y+=this.velocityY,this.y+this.height>=i.height-100&&(this.y=i.height-100-this.height,this.velocityY=0));return}this.animationTimer+=t,this.animationTimer>100&&(this.animationTimer=0,this.animationFrame=0),this.velocityY+=.8*this.weight,this.dashCooldown>0&&(this.dashCooldown-=t),!this.isDamaged&&!this.isAttacking&&(this.x+=this.velocityX),this.y+=this.velocityY,this.y+this.height>=i.height-100&&(this.y=i.height-100-this.height,this.velocityY=0,this.isGrounded=!0,this.doubleJumpUsed=!1),this.x=Math.max(0,Math.min(this.x,i.width-this.width)),this.isGrounded&&!this.isAttacking&&!this.isDamaged&&(this.velocityX*=.8);for(let s in this.cooldowns)this.cooldowns[s]>0&&(this.cooldowns[s]-=t);this.comboTimer>0&&(this.comboTimer-=t,this.comboTimer<=0&&(this.comboBuffer=[],this.currentCombo=0)),this.isDamaged&&(this.damageTimer+=t,this.damageTimer>300&&(this.isDamaged=!1,this.damageTimer=0,this.currentAnimation="idle")),this.isInvulnerable&&(this.invulnerableTimer+=t,this.invulnerableTimer>500&&(this.isInvulnerable=!1,this.invulnerableTimer=0)),this.updateProjectiles(t,e),e&&(this.facingRight=this.x<e.x)}move(t){if(this.isDamaged||this.isAttacking)return;const e=this.isGrounded?this.speed:this.speed*.8;this.velocityX=t*e,this.isGrounded&&(this.currentAnimation="walk")}jump(){if(!this.isDamaged)return this.isGrounded?(this.velocityY=-this.jumpPower,this.isGrounded=!1,this.currentAnimation="jump",!0):this.abilities&&this.abilities.doubleJump&&!this.doubleJumpUsed?(this.velocityY=-this.jumpPower*.8,this.doubleJumpUsed=!0,!0):!1}attack(t,e){if(this.isDamaged||this.isAttacking||this.cooldowns[t]>0)return!1;const i=this.moves[t];return!i||i.specialCost&&this.specialEnergy<i.specialCost?!1:(this.isAttacking=!0,this.currentAnimation=i.animation,this.cooldowns[t]=i.cooldown,i.specialCost&&(this.specialEnergy-=i.specialCost),this.comboBuffer.push(t),this.comboTimer=500,i.projectile?this.createProjectile(i,e):(this.lastAttack={move:i,target:e,timestamp:Date.now()},setTimeout(()=>{this.isAttacking=!1},300)),!0)}block(t){this.isDamaged||this.isAttacking||(this.isBlocking=t,t?(this.currentAnimation="block",this.velocityX=0):this.currentAnimation="idle")}dash(t){return!this.abilities||!this.abilities.dashSpeed||this.dashCooldown>0||this.isDamaged||this.isAttacking?!1:(this.velocityX=t*this.abilities.dashSpeed,this.dashCooldown=500,!0)}checkHit(t,e){if(!t||t.isInvulnerable)return!1;const i=this.x+this.width/2,s=t.x+t.width/2,a=Math.abs(i-s),n=this.facingRight?s>i:s<i,o=!(this.y+this.height<t.y||t.y+t.height<this.y);return a<=e.range&&n&&o}dealDamage(t,e){let i=e.damage,s=!1;return t.isBlocking&&(i*=1-t.moves.block.damageReduction,t.specialEnergy=Math.min(t.maxSpecialEnergy,t.specialEnergy+t.moves.block.specialGain),s=!0,console.log(`Attack blocked! Reduced damage: ${i}`)),t.takeDamage(i,e.knockback,this.facingRight),this.specialEnergy=Math.min(this.maxSpecialEnergy,this.specialEnergy+e.specialGain),s?this.currentCombo=0:(this.currentCombo++,this.currentCombo>this.maxCombo&&(this.maxCombo=this.currentCombo)),this.checkCombos(),console.log(`Damage dealt: ${i}, Target health: ${t.health}`),{blocked:s,damage:i,targetHealth:t.health}}takeDamage(t,e,i){if(this.isInvulnerable)return;const s=this.health;this.health=Math.max(0,this.health-t),console.log(`${this.name} took ${t} damage. Health: ${s} -> ${this.health}`),this.isDamaged=!0,this.isAttacking=!1,this.isBlocking=!1,this.currentAnimation="hurt",this.damageTimer=0,this.velocityX=(i?-1:1)*e,this.velocityY=-5,this.currentCombo=0,this.isInvulnerable=!0,this.invulnerableTimer=0}checkCombos(){const t=this.comboBuffer.join(",");for(let e in this.combos)if(t.endsWith(e)){const i=this.combos[e];return this.specialEnergy=Math.min(this.maxSpecialEnergy,this.specialEnergy+i.specialGain),i}return null}createProjectile(t,e){const i={x:this.x+(this.facingRight?this.width:0),y:this.y+this.height/2,velocityX:(this.facingRight?1:-1)*10,width:30,height:20,damage:t.damage,knockback:t.knockback,active:!0,effect:t.effect};this.projectiles.push(i),setTimeout(()=>{this.isAttacking=!1},300)}updateProjectiles(t,e){for(let i=this.projectiles.length-1;i>=0;i--){const s=this.projectiles[i];if(s.x+=s.velocityX,s.x<-50||s.x>2e3){this.projectiles.splice(i,1);continue}e&&s.active&&s.x<e.x+e.width&&s.x+s.width>e.x&&s.y<e.y+e.height&&s.y+s.height>e.y&&(e.isBlocking||e.takeDamage(s.damage,s.knockback,s.velocityX>0),s.active=!1,this.projectiles.splice(i,1))}}reset(t,e){this.x=t,this.y=e,this.health=this.maxHealth,this.specialEnergy=0,this.velocityX=0,this.velocityY=0,this.isGrounded=!1,this.isBlocking=!1,this.isAttacking=!1,this.isDamaged=!1,this.isInvulnerable=!1,this.currentAnimation="idle",this.cooldowns={},this.comboBuffer=[],this.currentCombo=0,this.projectiles=[],this.isVictorious=!1,this.isDefeated=!1,this.victoryAnimationTimer=0,this.defeatAnimationTimer=0}playVictoryAnimation(){this.isVictorious=!0,this.isDefeated=!1,this.currentAnimation="win",this.victoryAnimationTimer=0,this.isAttacking=!1,this.isDamaged=!1,this.velocityX=0,this.velocityY=0}playDefeatAnimation(){this.isDefeated=!0,this.isVictorious=!1,this.currentAnimation="defeat",this.defeatAnimationTimer=0,this.isAttacking=!1,this.isDamaged=!1,this.velocityX=0,this.velocityY=0}getCurrentFrameCount(){return 1}getCurrentSpriteImage(){if(!this.imageLoaded||!this.sprites||!this.sprites[this.currentAnimation])return null;const e=this.sprites[this.currentAnimation].file;return this.spriteImages[e]||null}};window.Character=y;let k=class{constructor(t,e="medium"){this.character=t,this.difficulty=e,this.opponent=null,this.reactionTime=this.getReactionTime(),this.aggressiveness=this.getAggressiveness(),this.defensiveness=this.getDefensiveness(),this.comboChance=this.getComboChance(),this.adaptationRate=this.getAdaptationRate(),this.predictionAccuracy=this.getPredictionAccuracy(),this.lastAction=null,this.actionTimer=0,this.decisionTimer=0,this.currentStrategy="neutral",this.patternMemory=[],this.dodgeTimer=0,this.adaptiveMemory=[],this.playerPatterns={attackFrequency:0,favoriteAttacks:{},movementStyle:"balanced",reactionTime:300},this.anticipatedAction=null,this.feintChance=.1,this.pressureLevel=0,this.behaviors={aggressive:this.aggressiveBehavior.bind(this),defensive:this.defensiveBehavior.bind(this),balanced:this.balancedBehavior.bind(this),combo:this.comboBehavior.bind(this),special:this.specialBehavior.bind(this),counter:this.counterBehavior.bind(this),intercept:this.interceptBehavior.bind(this),pressure:this.pressureBehavior.bind(this)}}getReactionTime(){return{easy:300,medium:200,hard:100,insane:50}[this.difficulty]||200}getAggressiveness(){return{easy:.4,medium:.6,hard:.8,insane:.95}[this.difficulty]||.6}getDefensiveness(){return{easy:.2,medium:.4,hard:.6,insane:.8}[this.difficulty]||.4}getComboChance(){return{easy:.1,medium:.3,hard:.5,insane:.8}[this.difficulty]||.3}getAdaptationRate(){return{easy:.02,medium:.05,hard:.1,insane:.2}[this.difficulty]||.05}getPredictionAccuracy(){return{easy:.3,medium:.5,hard:.7,insane:.9}[this.difficulty]||.5}update(t,e){this.opponent=e,this.actionTimer-=t,this.decisionTimer-=t,this.dodgeTimer-=t,this.decisionTimer<=0&&(this.analyzeOpponent(),this.adaptToPlayer(),this.predictPlayerAction(),this.chooseStrategy(),this.decisionTimer=this.reactionTime+Math.random()*200),this.actionTimer<=0&&(this.executeAction(),this.actionTimer=this.reactionTime*.5),this.character.health<30&&this.character.specialEnergy>=100&&(this.currentStrategy="special")}analyzeOpponent(){if(!this.opponent)return;const t=Math.abs(this.character.x-this.opponent.x);if(this.character.health/this.character.maxHealth,this.opponent.health/this.opponent.maxHealth,this.patternMemory.push({distance:t,opponentAttacking:this.opponent.isAttacking,opponentBlocking:this.opponent.isBlocking,opponentMoving:this.opponent.velocityX!==0,opponentHealth:this.opponent.health,timestamp:Date.now()}),this.opponent.isAttacking){this.playerPatterns.attackFrequency++;const s=this.opponent.lastMove||"unknown";this.playerPatterns.favoriteAttacks[s]=(this.playerPatterns.favoriteAttacks[s]||0)+1}this.patternMemory.length>10&&this.patternMemory.shift();const e=this.patternMemory.filter(s=>s.opponentAttacking).length,i=this.patternMemory.filter(s=>s.opponentBlocking).length;this.opponentTendency={aggressive:e>6,defensive:i>4,distance:t}}adaptToPlayer(){const t=this.patternMemory.slice(-5),e=t.filter(a=>a.opponentAttacking).length,i=t.filter(a=>a.opponentBlocking).length;e>3?(this.defensiveness=Math.min(1,this.defensiveness+this.adaptationRate),this.aggressiveness=Math.max(0,this.aggressiveness-this.adaptationRate)):i>3&&(this.aggressiveness=Math.min(1,this.aggressiveness+this.adaptationRate),this.feintChance=Math.min(.5,this.feintChance+this.adaptationRate));const s=Object.keys(this.playerPatterns.favoriteAttacks).reduce((a,n)=>this.playerPatterns.favoriteAttacks[a]>this.playerPatterns.favoriteAttacks[n]?a:n,"punch");s==="punch"?this.anticipatedAction="punch":s==="kick"&&(this.anticipatedAction="kick")}predictPlayerAction(){if(Math.random()<this.predictionAccuracy){const t=Math.abs(this.character.x-this.opponent.x);t<120&&this.playerPatterns.attackFrequency>5?this.anticipatedAction=this.getMostLikelyAttack():t>200&&this.opponent.velocityX!==0&&(this.anticipatedAction="approach")}}getMostLikelyAttack(){const t=this.playerPatterns.favoriteAttacks;return Object.keys(t).reduce((e,i)=>t[e]>t[i]?e:i,"punch")}chooseStrategy(){const t=Math.abs(this.character.x-this.opponent.x),e=this.character.health-this.opponent.health;t<150&&Math.random()<this.comboChance?this.currentStrategy="combo":this.character.specialEnergy>=30&&Math.random()<.3?this.currentStrategy="special":e>20?this.currentStrategy="aggressive":e<-20?this.currentStrategy="defensive":this.currentStrategy="balanced",t<200&&Math.random()<.9&&(this.currentStrategy="aggressive"),this.anticipatedAction==="approach"&&t>150?this.currentStrategy="aggressive":this.anticipatedAction&&this.anticipatedAction!=="approach"&&(this.currentStrategy="aggressive"),this.opponentTendency&&this.opponentTendency.aggressive&&Math.random()<this.defensiveness*.1&&(this.currentStrategy="defensive"),this.opponent.health<50&&(this.pressureLevel=Math.min(1,this.pressureLevel+.1),Math.random()<this.pressureLevel&&(this.currentStrategy="pressure"))}executeAction(){const t=this.behaviors[this.currentStrategy];t?t():this.balancedBehavior()}aggressiveBehavior(){const t=Math.abs(this.character.x-this.opponent.x);if(t>200)this.moveTowardsOpponent(),Math.random()<.4&&this.character.jump();else if(t<150){const e=Math.random();e<.7?this.character.attack("punch",this.opponent):e<.9?this.character.attack("kick",this.opponent):this.character.specialEnergy>=30&&this.character.attack("special",this.opponent)}else this.moveTowardsOpponent()}defensiveBehavior(){const t=Math.abs(this.character.x-this.opponent.x);if(t<120)if(Math.random()<.7){const e=Math.random()<.6?"punch":"kick";this.character.attack(e,this.opponent)}else this.moveAwayFromOpponent();else if(t>200)this.moveTowardsOpponent();else if(Math.random()<.8){const e=Math.random()<.6?"punch":"kick";this.character.attack(e,this.opponent)}else this.moveTowardsOpponent()}balancedBehavior(){const t=Math.abs(this.character.x-this.opponent.x);if(t>200)this.moveTowardsOpponent();else if(t<150){const e=Math.random()<.6?"punch":"kick";this.character.attack(e,this.opponent)}else if(Math.random()<.9){const e=Math.random()<.6?"punch":"kick";this.character.attack(e,this.opponent)}else this.moveTowardsOpponent()}comboBehavior(){if(Math.abs(this.character.x-this.opponent.x)>150)this.moveTowardsOpponent();else{const e=this.getComboSequence();this.executeCombo(e)}}specialBehavior(){const t=Math.abs(this.character.x-this.opponent.x);this.character.specialEnergy>=100&&t<200?this.character.attack("ultimate",this.opponent):this.character.specialEnergy>=30&&t<180?this.character.attack("special",this.opponent):this.aggressiveBehavior()}moveTowardsOpponent(){if(!this.opponent)return;const t=this.character.x<this.opponent.x?1:-1;this.character.move(t),this.character.abilities&&this.character.abilities.dashSpeed&&Math.random()<.2&&this.character.dash(t)}moveAwayFromOpponent(){if(!this.opponent)return;const t=this.character.x<this.opponent.x?-1:1;this.character.move(t),Math.random()<.3&&this.character.jump()}dodgeAttack(){const t=Math.random()<.5?-1:1;this.character.move(t),Math.random()<.5&&this.character.jump()}counterAttack(){setTimeout(()=>{Math.random()<.7?this.character.attack("kick",this.opponent):this.character.specialEnergy>=30&&this.character.attack("special",this.opponent)},100)}getComboSequence(){const t=[["punch","punch","kick"],["kick","punch","special"],["punch","kick","punch"],["kick","kick","special"]];return this.character.type==="trump"?t[0]:t[1]}executeCombo(t){let e=0;t.forEach((i,s)=>{setTimeout(()=>{i==="special"&&this.character.specialEnergy<30?this.character.attack("kick",this.opponent):this.character.attack(i,this.opponent)},e),e+=200})}counterBehavior(){const t=Math.abs(this.character.x-this.opponent.x);this.opponent.isAttacking&&t<150?setTimeout(()=>{Math.random()<.8&&this.character.attack("kick",this.opponent)},100):t>180?this.moveTowardsOpponent():(this.character.block(!0),setTimeout(()=>this.character.block(!1),200))}interceptBehavior(){if(Math.abs(this.character.x-this.opponent.x)>120)this.moveTowardsOpponent(),Math.random()<.4&&this.character.jump();else{const e=Math.random()<.6?"punch":"kick";this.character.attack(e,this.opponent)}}pressureBehavior(){if(Math.abs(this.character.x-this.opponent.x)>100){if(this.moveTowardsOpponent(),this.character.abilities&&this.character.abilities.dashSpeed&&Math.random()<.5){const e=this.character.x<this.opponent.x?1:-1;this.character.dash(e)}}else{const e=Math.random();e<.5?this.character.attack("punch",this.opponent):e<.8?this.character.attack("kick",this.opponent):this.character.specialEnergy>=30&&this.character.attack("special",this.opponent)}}reset(){this.lastAction=null,this.actionTimer=0,this.decisionTimer=0,this.currentStrategy="neutral",this.patternMemory=[],this.dodgeTimer=0,this.adaptiveMemory=[],this.playerPatterns={attackFrequency:0,favoriteAttacks:{},movementStyle:"balanced",reactionTime:300},this.anticipatedAction=null,this.pressureLevel=0}};window.FighterAI=k;class p{constructor(){this.canvas=document.getElementById("game-canvas"),this.ctx=this.canvas.getContext("2d"),this.resizeCanvas(),this.state="menu",this.selectedCharacter="trump",this.difficulty="medium",this.round=1,this.timer=99,this.lastTime=0,this.player=null,this.opponent=null,this.ai=null,this.particles=[],this.effects=[],this.screenShake=0,window.AudioSystem=window.AudioSystem||AudioSystem,window.FighterAI=window.FighterAI||FighterAI,window.Character=window.Character||Character,this.audioSystem=new window.AudioSystem,this.audioInitialized=!1,this.keys={},this.lastKeys={},this.ultimateNotificationShown=!1,this.gameStats={maxCombo:0,matchTime:0,perfectWin:!0,damageDealt:0},this.backgroundImage=new Image,this.backgroundLoaded=!1,this.backgroundImage.onload=()=>{this.backgroundLoaded=!0,console.log("✅ Background image loaded")},this.backgroundImage.onerror=()=>{console.log("❌ Background image failed to load, using default"),this.backgroundLoaded=!1},this.backgroundImage.src="background.png",this.setupEventListeners(),this.showMenu()}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight}setupEventListeners(){var t,e,i,s,a,n;window.addEventListener("resize",()=>this.resizeCanvas()),document.addEventListener("keydown",o=>{this.keys[o.key.toLowerCase()]=!0,this.state==="playing"&&o.key==="Escape"&&this.pauseGame()}),document.addEventListener("keyup",o=>{this.keys[o.key.toLowerCase()]=!1}),document.getElementById("start-btn").addEventListener("click",()=>{this.initAudio(),this.showCharacterSelect()}),document.getElementById("character-fight-btn").addEventListener("click",()=>{console.log("🎮 ENTER BATTLE CLICKED!"),this.startGame()}),document.getElementById("difficulty-btn").addEventListener("click",()=>{this.cycleDifficulty()}),document.getElementById("controls-btn").addEventListener("click",()=>{this.showControls()}),document.getElementById("character-back").addEventListener("click",()=>{this.showMenu()}),document.getElementById("controls-back").addEventListener("click",()=>{this.showMenu()}),document.getElementById("resume-btn").addEventListener("click",()=>{this.resumeGame()}),document.getElementById("restart-btn").addEventListener("click",()=>{this.restartGame()}),document.getElementById("quit-btn").addEventListener("click",()=>{this.quitToMenu()}),(t=document.getElementById("rematch-btn"))==null||t.addEventListener("click",()=>{this.restartGame()}),(e=document.getElementById("menu-btn"))==null||e.addEventListener("click",()=>{this.quitToMenu()}),(i=document.getElementById("victory-rematch-btn"))==null||i.addEventListener("click",()=>{this.closeGameOverScreens(),this.restartGame()}),(s=document.getElementById("victory-menu-btn"))==null||s.addEventListener("click",()=>{this.closeGameOverScreens(),this.quitToMenu()}),(a=document.getElementById("defeat-rematch-btn"))==null||a.addEventListener("click",()=>{this.closeGameOverScreens(),this.restartGame()}),(n=document.getElementById("defeat-menu-btn"))==null||n.addEventListener("click",()=>{this.closeGameOverScreens(),this.quitToMenu()}),document.getElementById("tutorial-start").addEventListener("click",()=>{this.hideTutorial()}),document.addEventListener("keydown",o=>{o.key.toLowerCase()==="h"&&this.state==="playing"&&this.toggleControlHints()}),document.querySelectorAll(".character-card").forEach(o=>{o.addEventListener("click",c=>{this.selectCharacter(c.target.closest(".character-card").dataset.character)}),o.addEventListener("mouseenter",()=>{this.animateCharacterCard(o,!0)}),o.addEventListener("mouseleave",()=>{this.animateCharacterCard(o,!1)})}),document.querySelectorAll(".menu-btn").forEach(o=>{o.addEventListener("mouseenter",()=>{this.audioInitialized&&this.audioSystem.playSound("menu_hover")})})}initAudio(){this.audioInitialized||(this.audioInitialized=this.audioSystem.init(),this.audioInitialized&&this.audioSystem.playBackgroundMusic())}showMenu(){this.hideAllScreens(),document.getElementById("main-menu").classList.add("active"),this.state="menu"}showCharacterSelect(){this.hideAllScreens(),document.getElementById("character-select").classList.add("active"),this.audioSystem.playSound("menu_select")}showControls(){this.hideAllScreens(),document.getElementById("controls-screen").classList.add("active"),this.audioSystem.playSound("menu_select")}hideAllScreens(){console.log("=== HIDEALLSCREENS DEBUG ===");const t=document.querySelectorAll(".menu-screen");console.log("Menu screens found:",t.length),t.forEach((i,s)=>{console.log(`Screen ${s}: id=${i.id}, classes=${i.classList.toString()}`),i.classList.remove("active"),console.log(`Screen ${s} after remove: classes=${i.classList.toString()}`)});const e=document.querySelector(".game-screen");console.log("Game screen found:",!!e),e&&(console.log("Game screen classes before:",e.classList.toString()),e.classList.remove("active"),console.log("Game screen classes after:",e.classList.toString()))}closeGameOverScreens(){console.log("=== CLOSING GAME OVER SCREENS ===");const t=document.getElementById("victory-screen"),e=document.getElementById("defeat-screen");t&&(t.classList.remove("active"),t.style.display="none",t.style.zIndex="",t.style.position="",t.style.backgroundColor="",t.style.backdropFilter="",console.log("Victory screen closed")),e&&(e.classList.remove("active"),e.style.display="none",e.style.zIndex="",e.style.position="",e.style.backgroundColor="",e.style.backdropFilter="",console.log("Defeat screen closed"))}selectCharacter(t){this.selectedCharacter=t,document.querySelectorAll(".character-card").forEach(s=>{s.classList.remove("selected");const a=s.querySelector(".character-aura");a&&(a.style.opacity="0")});const e=document.querySelector(`[data-character="${t}"]`);e.classList.add("selected");const i=e.querySelector(".character-aura");i&&(i.style.opacity="0.4"),this.audioSystem.playSound("menu_select")}cycleDifficulty(){const t=["easy","medium","hard","insane"],e=t.indexOf(this.difficulty);this.difficulty=t[(e+1)%t.length],document.getElementById("difficulty-text").textContent=this.difficulty.charAt(0).toUpperCase()+this.difficulty.slice(1),this.audioSystem.playSound("menu_select")}startGame(){console.log("🚀 STARTING GAME!"),this.hideAllScreens(),document.querySelector(".game-screen").classList.add("active"),this.state="playing";const t=this.canvas.width*.25,e=this.canvas.width*.75,i=this.canvas.height-250;try{console.log("Creating player character:",this.selectedCharacter),this.player=new window.Character(this.selectedCharacter,t,i,!0);const s=this.selectedCharacter==="trump"?"elon":"trump";console.log("Creating opponent character:",s),this.opponent=new window.Character(s,e,i,!1),console.log("Characters created successfully")}catch(s){console.error("Error creating characters:",s),alert("Failed to load game characters. Please refresh and try again.");return}this.ai=new window.FighterAI(this.opponent,this.difficulty),this.opponent.ai=this.ai,this.updateUI(),this.showTutorial(),this.showAnnouncement("FIGHT!",1500),this.audioSystem.playSound("round_start"),this.gameStats={maxCombo:0,matchTime:0,perfectWin:!0,damageDealt:0},this.lastTime=performance.now(),this.gameLoop()}pauseGame(){this.state==="playing"&&(this.state="paused",document.getElementById("pause-menu").classList.add("active"))}resumeGame(){this.state==="paused"&&(this.state="playing",document.getElementById("pause-menu").classList.remove("active"),this.lastTime=performance.now(),this.gameLoop())}restartGame(){this.hideAllScreens(),document.querySelector(".game-screen").classList.add("active"),this.round=1,this.timer=99;const t=this.canvas.width*.25,e=this.canvas.width*.75,i=this.canvas.height-250;this.player.reset(t,i),this.opponent.reset(e,i),this.ai.reset(),this.particles=[],this.effects=[],this.screenShake=0,this.state="playing",this.showAnnouncement("FIGHT!",1500),this.audioSystem.playSound("round_start"),this.gameStats={maxCombo:0,matchTime:0,perfectWin:!0,damageDealt:0},this.lastTime=performance.now(),this.gameLoop()}quitToMenu(){this.state="menu",this.showMenu(),this.audioSystem.stopBackgroundMusic(),this.audioSystem.playBackgroundMusic()}gameLoop(t=0){if(this.state!=="playing")return;const e=t-this.lastTime;this.lastTime=t,this.update(e),this.render(),this.gameLoopId=requestAnimationFrame(i=>this.gameLoop(i))}update(t){this.handleInput(),this.player.update(t,this.opponent,this.canvas),this.opponent.update(t,this.player,this.canvas),this.ai.update(t,this.player),this.processAIAttacks(),this.updateParticles(t),this.updateEffects(t),this.screenShake>0&&(this.screenShake-=t),this.updateTimer(t),this.checkWinCondition(),this.updateUI(),this.checkUltimateReady(),this.player.maxCombo>this.gameStats.maxCombo&&(this.gameStats.maxCombo=this.player.maxCombo),this.opponent.maxCombo>this.gameStats.maxCombo&&(this.gameStats.maxCombo=this.opponent.maxCombo)}handleInput(){this.keys.a?this.player.move(-1):this.keys.d&&this.player.move(1),this.keys.w&&this.player.jump(),this.keys.s?this.player.block(!0):this.player.block(!1),this.keys.j&&!this.lastKeys.j&&this.player.attack("punch",this.opponent)&&this.handleAttackEffects(this.player,"punch"),this.keys.k&&!this.lastKeys.k&&this.player.attack("kick",this.opponent)&&this.handleAttackEffects(this.player,"kick"),this.keys.l&&!this.lastKeys.l&&this.player.attack("special",this.opponent)&&this.handleAttackEffects(this.player,"special"),this.keys[" "]&&!this.lastKeys[" "]&&this.player.attack("ultimate",this.opponent)&&(this.handleAttackEffects(this.player,"ultimate"),this.addScreenShake(500)),this.lastKeys={...this.keys}}handleAttackEffects(t,e){const i=t.moves[e];i.sound&&this.audioSystem.playSound(i.sound),(e==="special"||e==="ultimate")&&this.createSpecialEffect(t,i.effect),i.projectile||setTimeout(()=>{const s=t===this.player?this.opponent:this.player;if(t.checkHit(s,i)){const a=t.dealDamage(s,i);this.createHitEffect(s.x+s.width/2,s.y+s.height/2),a.blocked||(this.addScreenShake(200),s.health<=0&&(console.log(`${s.name} defeated!`),this.endRound()))}},100)}processAIAttacks(){if(this.opponent.lastAttack&&console.log(`🔍 Processing AI attack - Age: ${Date.now()-this.opponent.lastAttack.timestamp}ms`),this.opponent.lastAttack&&this.opponent.lastAttack.timestamp>Date.now()-500){const t=this.opponent.lastAttack;console.log(`⚔️ AI ATTACK DETECTED! Move: ${t.move.name||"punch"}, Target: ${t.target.name}`);const e=Math.abs(this.opponent.x+this.opponent.width/2-(t.target.x+t.target.width/2));if(console.log(`📏 Distance check: ${e} vs range: ${t.move.range}`),this.opponent.checkHit(t.target,t.move)){const i=this.opponent.dealDamage(t.target,t.move);this.createHitEffect(t.target.x+t.target.width/2,t.target.y+t.target.height/2),console.log(`🤖 AI HIT! Damage: ${i.damage}, Player health: ${t.target.health}/${t.target.maxHealth}`),i.blocked?console.log("🛡️ Player blocked AI attack!"):(this.addScreenShake(300),t.target.health<=0&&(console.log("💀 Player defeated by AI!"),this.endRound()))}else console.log(`❌ AI attack missed - distance: ${e}, range: ${t.move.range}`);this.opponent.lastAttack=null,console.log("🗑️ Cleared AI attack")}}render(){if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.save(),this.screenShake>0){const t=(Math.random()-.5)*10,e=(Math.random()-.5)*10;this.ctx.translate(t,e)}this.renderBackground(),this.renderCharacter(this.player),this.renderCharacter(this.opponent),this.renderProjectiles(),this.renderParticles(),this.renderEffects(),this.ctx.restore(),this.renderComboCounter()}renderBackground(){if(this.backgroundLoaded&&this.backgroundImage.complete)this.ctx.drawImage(this.backgroundImage,0,0,this.canvas.width,this.canvas.height);else{const t=this.ctx.createLinearGradient(0,0,0,this.canvas.height);t.addColorStop(0,"#87CEEB"),t.addColorStop(.6,"#87CEEB"),t.addColorStop(.6,"#228B22"),t.addColorStop(1,"#1a5f1a"),this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}this.ctx.fillStyle="#654321",this.ctx.fillRect(0,this.canvas.height-100,this.canvas.width,100)}renderCharacter(t){if(this.ctx.save(),t.facingRight||(this.ctx.translate(t.x+t.width,t.y),this.ctx.scale(-1,1),this.ctx.translate(-t.x,-t.y)),t.imageLoaded){const e=t.getCurrentSpriteImage();e&&e.complete?this.ctx.drawImage(e,t.x,t.y,t.width,t.height):(this.ctx.fillStyle=t.color,this.ctx.fillRect(t.x,t.y,t.width,t.height),this.ctx.fillStyle=t.type==="trump"?"#ffd700":"#333",this.ctx.fillRect(t.x+10,t.y-20,t.width-20,20))}else this.ctx.fillStyle=t.color,this.ctx.fillRect(t.x,t.y,t.width,t.height),this.ctx.fillStyle=t.type==="trump"?"#ffd700":"#333",this.ctx.fillRect(t.x+10,t.y-20,t.width-20,20);this.ctx.restore()}renderProjectiles(){[...this.player.projectiles,...this.opponent.projectiles].forEach(t=>{this.ctx.fillStyle=t.effect==="rocket_punch"?"#ff4500":"#4169e1",this.ctx.fillRect(t.x,t.y,t.width,t.height);for(let e=0;e<3;e++)this.createParticle(t.x+Math.random()*t.width,t.y+Math.random()*t.height,t.effect==="rocket_punch"?"#ff6347":"#1e90ff")})}renderParticles(){this.particles.forEach(t=>{this.ctx.fillStyle=t.color,this.ctx.globalAlpha=t.alpha,this.ctx.fillRect(t.x,t.y,t.size,t.size),this.ctx.globalAlpha=1})}renderEffects(){this.effects.forEach(t=>{this.ctx.save(),t.type==="hit"&&(this.ctx.strokeStyle=t.color,this.ctx.lineWidth=3,this.ctx.globalAlpha=t.alpha,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius,0,Math.PI*2),this.ctx.stroke()),this.ctx.restore()})}renderComboCounter(){const t=Math.max(this.player.currentCombo,this.opponent.currentCombo);if(t>=3){const e=document.getElementById("combo-counter"),i=e.querySelector(".combo-number");i.textContent=t,e.classList.add("active"),setTimeout(()=>{e.classList.remove("active")},1e3)}}updateUI(){const t=Math.max(0,this.player.health/this.player.maxHealth*100),e=Math.max(0,this.opponent.health/this.opponent.maxHealth*100);document.getElementById("p1-health").style.width=`${t}%`,document.getElementById("p2-health").style.width=`${e}%`;const i=document.getElementById("p1-health"),s=document.getElementById("p2-health");t<25?i.style.backgroundColor="#ff4444":t<50?i.style.backgroundColor="#ffaa00":i.style.backgroundColor="#4CAF50",e<25?s.style.backgroundColor="#ff4444":e<50?s.style.backgroundColor="#ffaa00":s.style.backgroundColor="#4CAF50";const a=this.player.specialEnergy/this.player.maxSpecialEnergy*100,n=this.opponent.specialEnergy/this.opponent.maxSpecialEnergy*100;document.getElementById("p1-special").style.width=`${a}%`,document.getElementById("p2-special").style.width=`${n}%`,document.getElementById("p1-name").textContent=this.player.name.toUpperCase(),document.getElementById("p2-name").textContent=this.opponent.name.toUpperCase(),document.getElementById("round-number").textContent=this.round,document.getElementById("game-timer").textContent=Math.ceil(this.timer)}updateTimer(t){this.gameStats.matchTime+=t,this.timer-=t/1e3,this.timer<=0&&(this.timer=0,this.endRound())}updateParticles(t){for(let e=this.particles.length-1;e>=0;e--){const i=this.particles[e];i.x+=i.vx,i.y+=i.vy,i.vy+=.5,i.alpha-=t/1e3,i.size*=.98,(i.alpha<=0||i.size<.5)&&this.particles.splice(e,1)}}updateEffects(t){for(let e=this.effects.length-1;e>=0;e--){const i=this.effects[e];i.radius+=i.growth,i.alpha-=t/500,i.alpha<=0&&this.effects.splice(e,1)}}createParticle(t,e,i){this.particles.push({x:t,y:e,vx:(Math.random()-.5)*5,vy:Math.random()*-5-2,size:Math.random()*10+5,color:i,alpha:1})}createHitEffect(t,e){this.effects.push({type:"hit",x:t,y:e,radius:10,growth:5,color:"#ffd93d",alpha:1});for(let i=0;i<15;i++)this.createParticle(t+(Math.random()-.5)*30,e+(Math.random()-.5)*30,"#ffd93d");for(let i=0;i<8;i++)this.createParticle(t,e,"#ff6b6b");this.audioSystem.playHitSound(10)}createSpecialEffect(t,e){const i=t.x+t.width/2,s=t.y+t.height/2;for(let a=0;a<20;a++){const n=Math.PI*2*a/20,o=10;this.particles.push({x:i,y:s,vx:Math.cos(n)*o,vy:Math.sin(n)*o,size:15,color:e.includes("trump")?"#ff6b6b":"#667eea",alpha:1})}}addScreenShake(t){this.screenShake=t,document.getElementById("game-container").classList.add("screen-shake"),setTimeout(()=>{document.getElementById("game-container").classList.remove("screen-shake")},t)}showAnnouncement(t,e){const i=document.getElementById("announcement-text");i.textContent=t,i.classList.add("active"),setTimeout(()=>{i.classList.remove("active")},e)}checkWinCondition(){(this.player.health<=0||this.opponent.health<=0||this.timer<=0)&&(console.log(`Win condition met: Player HP: ${this.player.health}, Opponent HP: ${this.opponent.health}, Timer: ${this.timer}`),this.endRound())}endRound(){console.log("endRound called"),this.state="round-end",this.gameLoopId&&(cancelAnimationFrame(this.gameLoopId),this.gameLoopId=null);const t=this.player.health>this.opponent.health?this.player:this.opponent;t===this.player?this.opponent:this.player,console.log("Winner determined:",t.name),t===this.player&&this.player.health===this.player.maxHealth?this.gameStats.perfectWin=!0:this.gameStats.perfectWin=!1,t===this.player?(this.player.playVictoryAnimation(),this.opponent.playDefeatAnimation()):(this.opponent.playVictoryAnimation(),this.player.playDefeatAnimation()),setTimeout(()=>{this.showGameOver(t)},1500),this.audioSystem.playSound(t===this.player?"victory":"defeat")}showGameOver(t){console.log("=== SHOWGAMEOVER DEBUG START ==="),console.log("showGameOver called with winner:",t),console.log("Winner is player:",t===this.player),console.log("Current state:",this.state);const e=document.querySelectorAll('[id$="-screen"]');if(console.log("All screens in DOM:",Array.from(e).map(n=>n.id)),this.state==="game-over"){console.log("Already in game-over state, ignoring duplicate call");return}this.state="game-over",console.log("State set to game-over"),console.log("Calling hideAllScreens..."),this.hideAllScreens();const i=t===this.player,s=i?"victory-screen":"defeat-screen";console.log("Screen to show:",s),console.log("Is victory:",i);const a=document.getElementById(s);if(console.log("Screen element found:",!!a),a?(console.log("Screen display before:",getComputedStyle(a).display),console.log("Screen classList before:",a.classList.toString()),a.classList.add("active"),a.style.display="flex",a.style.zIndex="9999",a.style.position="fixed",a.style.top="0",a.style.left="0",a.style.width="100%",a.style.height="100%",a.style.backgroundColor="rgba(0, 0, 0, 0.9)",a.style.backdropFilter="blur(10px)",console.log("Screen display after:",getComputedStyle(a).display),console.log("Screen classList after:",a.classList.toString()),console.log("Screen visibility:",getComputedStyle(a).visibility),console.log("Screen z-index:",getComputedStyle(a).zIndex),console.log("Screen position:",getComputedStyle(a).position),console.log(`${s} should now be visible with forced styles`)):console.error(`${s} not found!`),i){const n=document.getElementById("victory-winner-name"),o=document.getElementById("victory-sprite"),c=document.getElementById("victory-quote"),r=document.getElementById("victory-time"),h=document.getElementById("victory-combo"),l=document.getElementById("victory-perfect");if(n&&(n.textContent=t.name.toUpperCase()),c&&(c.textContent=t.type==="trump"?`"You're fired!"`:'"To Mars and beyond!"'),o&&(o.src=`sprites/${t.type}/${t.type}_idle.png`),r){const m=Math.floor(this.gameStats.matchTime/6e4),u=Math.floor(this.gameStats.matchTime%6e4/1e3);r.textContent=`${m}:${u.toString().padStart(2,"0")}`}h&&(h.textContent=this.gameStats.maxCombo),l&&(l.textContent=this.gameStats.perfectWin?"YES":"NO"),this.createVictoryParticles(),this.createConfetti()}else{const n=document.getElementById("defeat-winner-name"),o=document.getElementById("defeat-sprite"),c=document.getElementById("defeat-quote"),r=document.getElementById("defeat-time"),h=document.getElementById("defeat-combo"),l=document.getElementById("defeat-damage");if(n&&(n.textContent=t.name.toUpperCase()),c&&(c.textContent=t.type==="trump"?`"You're fired!"`:'"To Mars and beyond!"'),o&&(o.src=`sprites/${t.type}/${t.type}_idle.png`),r){const m=Math.floor(this.gameStats.matchTime/6e4),u=Math.floor(this.gameStats.matchTime%6e4/1e3);r.textContent=`${m}:${u.toString().padStart(2,"0")}`}h&&(h.textContent=this.gameStats.maxCombo),l&&(l.textContent=Math.floor(this.opponent.maxHealth-this.opponent.health))}}createVictoryParticles(){const t=document.getElementById("victory-particles");if(!t)return;t.innerHTML="";const e=["🎉","🎊","🏆","⭐","🎈","🎆","🔥","💯","🚀","💪"],i=document.createDocumentFragment();for(let s=0;s<8;s++){const a=document.createElement("div");a.className="victory-particle",a.textContent=e[Math.floor(Math.random()*e.length)],a.style.left=Math.random()*100+"%",a.style.animationDelay=s*.3+"s",a.style.animationDuration=3+Math.random()+"s",i.appendChild(a)}t.appendChild(i),setTimeout(()=>{t.innerHTML=""},6e3)}createConfetti(){const t=document.getElementById("confetti-container");if(!t)return;t.innerHTML="";const e=["#ff6b6b","#4ecdc4","#45b7d1","#f39c12","#9b59b6","#e74c3c","#2ecc71","#f1c40f"],i=document.createDocumentFragment();for(let s=0;s<25;s++){const a=document.createElement("div");a.className="confetti-piece",a.style.left=Math.random()*100+"%",a.style.backgroundColor=e[Math.floor(Math.random()*e.length)],a.style.animationDelay=Math.random()*2+"s",a.style.animationDuration=2+Math.random()*2+"s",i.appendChild(a)}t.appendChild(i),setTimeout(()=>{t.innerHTML=""},5e3)}animateCharacterCard(t,e){const i=t.querySelector(".idle-sprite"),s=t.querySelector(".action-sprite"),a=t.querySelector(".character-aura");e?(i&&s&&setTimeout(()=>{t.matches(":hover")&&(i.style.opacity="0",s.style.opacity="1",setTimeout(()=>{t.matches(":hover")&&(i.style.opacity="1",s.style.opacity="0")},500))},200),a&&(a.style.opacity="0.4")):(i&&s&&(i.style.opacity="1",s.style.opacity="0"),a&&!t.classList.contains("selected")&&(a.style.opacity="0"))}showTutorial(){document.getElementById("tutorial-overlay").style.display="flex",this.state="tutorial"}hideTutorial(){document.getElementById("tutorial-overlay").style.display="none",this.state="playing",this.lastTime=performance.now(),this.gameLoop()}toggleControlHints(){const t=document.getElementById("control-hints");t.style.display==="none"?t.style.display="block":t.style.display="none"}checkUltimateReady(){const t=document.getElementById("ultimate-ready");this.player.specialEnergy>=80&&!this.ultimateNotificationShown&&(t.classList.add("active"),this.ultimateNotificationShown=!0,setTimeout(()=>{t.classList.remove("active")},3e3)),this.player.specialEnergy<80&&(this.ultimateNotificationShown=!1)}}window.Game=p;new p;console.log("🚀 Loading main.js");console.log("✅ All modules loaded");
